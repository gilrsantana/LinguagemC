******************************************************************************************
* ALUNO: GILMAR RIBEIRO SANTANA                                                          *
* MATRÍCULA: 2010478300064                                                               *
* DISCIPLINA: FUNDAMENTOS DE ALGORÍTIMOS DE COMPUTAÇÃO                                   *
*                                                                                        *
* ATIVIDADE: RESOLVER OS EXERCÍCIOS DE NÚMERO 1, 4, 11, 13 E 14 DA LISTA DISPONIBILIZADA *
******************************************************************************************


*********************************************************
EXERCICIO 1
*********************************************************
/*
 *Faça um programa que mostre o sucessor e o antecessor de um número inteiro fornecido pelo usuário
 */

#include <stdio.h>

int main(void) {

  int numero_base, sucessor, antecessor;

  printf("Informe o número base: ");
  scanf("%d", &numero_base);

  sucessor = numero_base + 1;
  antecessor = numero_base -1;

  printf("O número %d tem como antecessor o número %d e sucessor %d.\n", numero_base, antecessor, sucessor);

  return 0;
}



*********************************************************
EXERCICIO 4
*********************************************************
/*
 * Faça um programa que leia a altura (em centímetros) de uma pessoa e exiba-a em metros e centímetros.
 * Ex: 120  1m 20cm
 */

#include <stdio.h>

int main(void){

  int altura, metro, centimetro;

  printf("Informe sua altura em centímetros: ");
  scanf("%d", &altura);

  metro = altura / 100;
  centimetro = altura % 100;

  printf("A altura de %d centímetros corresponde a %dm %dcm\n", altura, metro, centimetro);

  return 0;
}


*********************************************************
EXERCICIO 11
*********************************************************
/*
 * Faça um programa que leia o número de dias decorrido em um evento e exiba na tela o mesmo valor
 * expresso em números de semanas e número de dias. Por exemplo, se um usuário fornecer o valor 19,
 * o programa deve exibir: “2 semanas e 5 dias”.
 */

#include <stdio.h>

int main(void){
    
  int duracao_evento = 0;
  int semana = 0;
  int dia = 0;

  printf("Informe quantos dias durou o evento: ");
  scanf("%d", &duracao_evento);

  semana = duracao_evento / 7;
  dia = duracao_evento % 7;
    
  if(duracao_evento % 7 == 0){
    printf("O evento durou %d semana(s).\n", semana);
  }else if(duracao_evento < 7){
    printf("O evento durou %d dia(s).\n", dia);
  }else if(duracao_evento>7){
    printf("O evento teve duração de %d semana(s) e %d dia(s).\n", semana, dia);   
  }
   
  return 0;
}




*********************************************************
EXERCICIO 13
*********************************************************
/*
 * Um vendedor ambulante utiliza concentrado de uva para produzir suco e refresco de uva.
 * Ele utiliza as seguintes proporções para o preparo do suco e do refresco:
 * suco: 1 de concentrado para 2 de água;
 * refresco: 1 de concentrado para 4 de água.
 * O vendedor utiliza copos de 100 ml.
 * Faça um programa que leia a litragem do concentrado que o vendedor irá comprar e o preço pago
 * por este concentrado e informe ao vendedor ambulante:
 *  quantos litros de refresco de uva podem ser produzidos com todo o concentrado;
 *  quantos litros de suco uva podem ser produzidos com todo o concentrado;
 *  quanto ele irá receber transformando o concentrado em suco de uva, considerando R$2,00
 * por copo de suco;
 *  quanto ele irá receber transformando o concentrado em refresco de uva, considerando R$1,00
 * por copo de refresco;
 *  o percentual de lucro do suco; (valor recebido-custo)/valor recebido
 *  o percentual de lucro do refresco (valor recebido-custo)/valor recebido
 * Ex: concentrado:1,5l valor:10,00
 * Com suco: 4,5l  45 copos  90,00  lucro: 88.9%
 * Com refresco: 7,5l  75 copos  75,00 lucro: 86.7%
 */

#include <stdio.h>

/* Constantes padrão de volume e proporção da bebida */
#define VOLUME_PADRAO_DO_CONCENTRADO 1.50
#define VOLUME_COPO 0.10
#define VALOR_COPO_SUCO 2.00
#define VALOR_COPO_REFRESCO 1.00
#define PROPORCAO_SUCO 3
#define PROPORCAO_REFRESCO 5

/* Variáveis globais utilizadas na função main e nas funções auxiliares */
int gMensagemGarrafa = 1;
int gGarrafaDeConcentrado;
float gValorDoConcentrado;
float gValorGasto;

/************************************************************************/
/* Início do método main */
int main(void){

  // Gera as mensagens de iniciais de consulta ao usuário
  void gerarMensagem(int mensagem); 

  // Calcula o gasto total na produção
  float calcularGasto(int produto);

  // Calcula a quantidade de bebida produzida
  float calcularBebida(int proporcao);

  // Calcula a quantidade de copos produzidos
  int calcularCopo(float quantidadeBebida);

  // Calcula o valor final de venda da bebida
  float calcularVendaBebida(int quantidade, float valor);

  // Calcula o lucro final de acordo com a bebida em pcento
  float calcularLucro(float valorTotalBebida);
  

  gerarMensagem(gMensagemGarrafa);
  scanf("%d", &gGarrafaDeConcentrado);

  gerarMensagem(0);
  scanf("%f", &gValorDoConcentrado);

  gValorGasto += calcularGasto(gGarrafaDeConcentrado);
  
  /* Início variáveis do scopo main */
  float quantidade_suco =  calcularBebida(PROPORCAO_SUCO);
  float quantidade_refresco = calcularBebida(PROPORCAO_REFRESCO);

  int quantidade_copo_suco = calcularCopo(quantidade_suco);
  int quantidade_copo_refresco = calcularCopo(quantidade_refresco);

  float valor_total_suco = calcularVendaBebida(quantidade_copo_suco, VALOR_COPO_SUCO);
  float valor_total_refresco = calcularVendaBebida(quantidade_copo_refresco, VALOR_COPO_REFRESCO);

  float lucro_suco = calcularLucro(valor_total_suco);
  float lucro_refresco = calcularLucro(valor_total_refresco);
  /* Fim variáveis do scopo main */
  
  /* Tela de resposta final ao usuário */
  printf("\nCom %d garrafa(s) de concentrado poderá fazer:\n", gGarrafaDeConcentrado);
  printf("Suco: %.2f litros, %d copos, R$ %.2f, %.2f%% de lucro.\n",
         quantidade_suco, quantidade_copo_suco, valor_total_suco, lucro_suco);
  printf("Refresco: %.2f litros, %d copos, R$ %.2f, %.2f%% de lucro.\n",
         quantidade_refresco, quantidade_copo_refresco, valor_total_refresco, lucro_refresco);
  /* Fim tela de resposta final ao usuário */
  return 0;
}
/* Fim do método main */
/*****************************************************************************/

/*****************************************************************************/
/* Início Funções Auxiliares */
void gerarMensagem(int mensagem){

  if(mensagem){
    printf("Informe a quantidade de garrafas de %.2f litros de concentrado deseja comprar: ", VOLUME_PADRAO_DO_CONCENTRADO);
  }else{
    printf("Informe o valor da garrafa de 1,5 litros: ");
  }      
}

float calcularGasto(int produto){

  float valorGasto = produto * gValorDoConcentrado;
  return valorGasto;
}

float calcularBebida(int proporcao){

  float quantidade = (VOLUME_PADRAO_DO_CONCENTRADO * gGarrafaDeConcentrado * proporcao);
  return quantidade;
}

int calcularCopo(float quantidadeBebida){
    
  int copo = quantidadeBebida / VOLUME_COPO;
  return copo;
}

float calcularVendaBebida(int quantidade, float valor){
    
  float valorVenda = quantidade * valor;
  return valorVenda;
}

float calcularLucro(float valorTotalBebida){

  float lucro = (valorTotalBebida - gValorGasto) / (gValorGasto) * 100;
  return lucro;
}
/* Fim Funções Auxiliares */
/**************************************************************************/



*********************************************************
EXERCICIO 14
*********************************************************
/*
 * Faça um programa para mostrar o valor total a pagar por um produto em promoção. 
 * O valor básico do produto e percentual de desconto são obtidos do código do produto
 * que possui 4 algarismos de acordo com a seguinte regra: 
 * Código do produto: xxyy
 * Preço básico: XX*15,00 + YY
 * Percentual de desconto: YY 
 * Por exemplo: código do produto: 2314
 * Preço : 23*15,00 + 14,00 = 359,00 
 * Desconto: 14% 
 * Total a pagar: 308,74 
 * Lembre-se que: 32/10 = 3  (quociente da divisão inteira) e  
 * 32%10 = 2( resto da divisão inteira)
 */

#include <stdio.h>

#define FATOR_PRECO 15 //Definido na regra de negócio
#define ITENS_CADASTRADOS 10 //Itens que o sistema pode suportar
#define REFERENCIA_DOS_PRODUTOS 5 //Atributos por produto

//Matriz referência para armazenamento dos itens
float matriz[ITENS_CADASTRADOS][REFERENCIA_DOS_PRODUTOS]={0};

//Variáveis globais utilizadas nas funções auxiliares e na main
int gCodigo = 0; 
int gPosicaoItem = 0;
int gIdProduto = 1;
int gColunaItem = 0;
int gColunaCodigo = 1;
int gColunaPreco = 2;
int gColunaDesconto = 3;
int gColunaTotal = 4;
float gPrecoDoProduto;
float gDescontoDoProduto;
float gTotalDoProduto;

//Cadastrar produtos
void sessaoCadastrarProduto();
//Calcular preço bruto do produto
float calcularPrecoBruto(int codigoDoProduto);
//Calcular o desconto do produto
float calcularDesconto(int codigoDoProduto);
//Calcular o valor total do produto
float calcularTotal(int codigoDoProduto);
//Apagar um produto já listado
void apagarProduto(int identificacaoDoProduto);
//Listar a matriz com todas as posições
void listarItensCadastrados(void);

int main(void){
    
    int menu;

    printf("\n\nPROGRAMA DE CADASTRO DE PRODUTOS\n\n");

    printf("Informe a opção desejada\n");
    printf("1 - CADASTRAR ITEM\n2 - COLSULTAR ITENS CADASTRADOS\n3 - APAGAR ITEM\n4 - SAIR DO PROGRAMA\n");
    printf("Sua opção: ");
    scanf("%i", &menu);

    while(menu < 1 || menu > 4){
        printf("ERRO!\n");
        printf("Informe a opção desejada\n");
        printf("1 - CADASTRAR ITEM\n2 - LISTAR ITENS CADASTRADOS\n3 - APAGAR ITEM\n4 - SAIR DO PROGRAMA\n");
        printf("Sua opção: ");
        scanf("%i", &menu);
    }

    switch (menu)
    {
    case 1:
        sessaoCadastrarProduto();
        break;
    case 2:
        listarItensCadastrados();
        break;
    
    case 3:
        printf("\n\n******ATENÇÃO******\n");
        printf("TEM CERTEZA QUE DESEJA APAGAR UM PRODUTO?");
        printf("0 = NÃO / 1 = SIM: ");
        int apagar;
        scanf("%i", &apagar);

        int itemParaApagar;
        if(apagar){
            printf("Informe o ID do Produto: ");
            scanf("%i", &itemParaApagar);
            apagarProduto(itemParaApagar-1);
        }else{
            listarItensCadastrados();
        }
        
    break;

    case 4:
        break;
    
    default:
        break;
    }
    
    return 0;
}

/****Início da função de Cadastro de Produtos****/
void sessaoCadastrarProduto(void){

    float precoBruto;
    float desconto;
    float total;

    printf("\n\n******SESSÃO DE CADASTRO DE PRODUTOS******\n");
    printf("Informe o código de 4 dígitos: ");
    scanf("%i", &gCodigo);
    
    while(gCodigo < 1000 || gCodigo > 9999){
        printf("\nERRO! Digite um código de 4 dígitos\n");
        printf("SEÇÃO DE CADASTRO DE PRODUTO\n");
        printf("Informe o código de 4 dígitos: ");
        scanf("%i", &gCodigo);
    }

    matriz[gPosicaoItem][gColunaItem] = gIdProduto;
    matriz[gPosicaoItem][gColunaCodigo] = gCodigo;
    matriz[gPosicaoItem][gColunaPreco] = calcularPrecoBruto(gCodigo);
    matriz[gPosicaoItem][gColunaDesconto] = calcularDesconto(gCodigo);
    matriz[gPosicaoItem][gColunaTotal] = calcularTotal(gCodigo);
    
    printf("ID  \t CODIGO\t PREÇO BRUTO\t DESCONTO%%\t    TOTAL\n");
        
    printf("%2.0f\t", matriz[gPosicaoItem][gColunaItem]);
    printf("   %.0f\t", matriz[gPosicaoItem][gColunaCodigo]);
    printf("   R$ %.2f\t", matriz[gPosicaoItem][gColunaPreco]);
    printf("       %2.0f%%\t", matriz[gPosicaoItem][gColunaDesconto]);
    printf("R$ %.2f\t", matriz[gPosicaoItem][gColunaTotal]);
    printf("\n");
    
    gPosicaoItem++;  
    gIdProduto++;

    if(gPosicaoItem == ITENS_CADASTRADOS - 1){
        printf("ATENÇÃO! VOCÊ SÓ PODE CADASTRAR MAIS UM PRODUTO\n");
    }          
    if(gPosicaoItem == ITENS_CADASTRADOS){
        printf("ATENÇÃO! SISTEMA NÃO SUPORTA MAIS ITENS CADASTRADOS\n");
    }

    printf("******FIM DA SESSÃO DE CADASTRO DE PRODUTOS******\n");

    main();
}
/****Fim da função de Cadastro de Produtos****/

/****Início da função de Calculo de preço bruto de Produtos****/
float calcularPrecoBruto(int codigoDoProduto){

    gPrecoDoProduto = ( (codigoDoProduto / 100) * FATOR_PRECO) + codigoDoProduto % 100;

    return gPrecoDoProduto;
}
/****Fim da função de Calculo de preço bruto de Produtos****/

/****Início da função de Calculo de desconto de Produtos****/
float calcularDesconto(int codigoDoProduto){

    gDescontoDoProduto = codigoDoProduto % 100;

    return gDescontoDoProduto;
}
/****Fim da função de Calculo de desconto de Produtos****/

/****Início da função de Calculo de valor total do Produto****/
float calcularTotal(int codigoDoProduto){
    
    
    gTotalDoProduto = gPrecoDoProduto - (gPrecoDoProduto * (gDescontoDoProduto / 100) );

    return gTotalDoProduto;
}
/****Fim da função de Calculo de valor total do Produto****/

/****Início da função de listar todos os produtos****/
void listarItensCadastrados(void){

    printf("\n\n******SESSÃO DE LISTAGEM DE PRODUTOS******\n");
    printf("ID  \t CODIGO\t PREÇO BRUTO\t DESCONTO%%\t    TOTAL\n");
    for(int i = 0; i < ITENS_CADASTRADOS; i++){
        printf("%2.0f\t", matriz[i][gColunaItem]);
        printf("   %.0f\t", matriz[i][gColunaCodigo]);
        printf("   R$ %.2f\t", matriz[i][gColunaPreco]);
        printf("       %2.0f%%\t", matriz[i][gColunaDesconto]);
        printf("R$ %.2f\t", matriz[i][gColunaTotal]);
        printf("\n");
    }

    printf("******FIM DA SESSÃO DE LISTAGEM DE PRODUTOS******\n");

    main();
}
/****Fim da função de listar todos os produtos****/

/****Início da função de apagar um produto determinado****/
void apagarProduto(int identificacaoDoProduto){

    matriz[identificacaoDoProduto][gColunaItem] = 0;
    matriz[identificacaoDoProduto][gColunaCodigo] = 0;
    matriz[identificacaoDoProduto][gColunaPreco] = 0;
    matriz[identificacaoDoProduto][gColunaDesconto] = 0;
    matriz[identificacaoDoProduto][gColunaTotal] = 0;

    main();
}
/****Fim da função de apagar um produto determinado****/


